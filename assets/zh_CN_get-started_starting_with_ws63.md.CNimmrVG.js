import{_ as s,c as a,o as n,a2 as i,ab as p,ac as l,ad as e,ae as t,af as r,ag as h,ah as c,ai as d,aj as k,ak as o,al as b}from"./chunks/framework.BZKnb7tL.js";const w=JSON.parse('{"title":"从 ws63 开始","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/get-started/starting_with_ws63.md","filePath":"zh_CN/get-started/starting_with_ws63.md"}'),u={name:"zh_CN/get-started/starting_with_ws63.md"},g=i(`<h1 id="从-ws63-开始" tabindex="-1">从 ws63 开始 <a class="header-anchor" href="#从-ws63-开始" aria-label="Permalink to &quot;从 ws63 开始&quot;">​</a></h1><p>本文说明如何基于 ws63 sdk 使用 xfusion。</p><hr><p><strong>阅读对象：</strong></p><ul><li>基于 ws63 sdk 平台使用 xfusion 的用户。</li></ul><hr><p><strong>关于 ws63：</strong></p><p>ws63 是海思 HI3863 的 SDK 的代号。</p><p>Hi3863V100 系列是 2.4GHz Wi-Fi 6 BLE 星闪多模 IoT SoC 芯片，其中增强款芯片 Hi3863EV100 支持 2.4GHz 的雷达人体活动检测功能，适用于大小家电、电工照明及对人体出没检测有需求的常电类物联网智能场景。</p><p>•集成 IEEE 802.11 b/g/n/ax 基带和 RF 电路，包括功率放大器 PA、低噪声放大器 LNA、RF balun、天线开关以及电源管理模块等； •支持 20MHz 频宽，提供最大 114.7Mbps 物理层速率，支持更大的发射功率和更远的覆盖距离； •支持 BLE 1MHz/2MHz 频宽、BLE4.0/4.1/4.2/5.0/5.1/5.2 协议、BLE Mesh 和 BLE 网关功能，最大空口速率 2Mbps； •支持星闪 SLE 1MHz/2MHz/4MHz 频宽、SLE1.0 协议、支持 SLE 网关功能，最大空口速率 12Mbps。</p><p>Hi3863V100 系列芯片采用 QFN40（5mm x 5mm）封装，匹配不同场合的应用，细分为下列两种：</p><p>• Hi3863：合封 4MB Flash，支持 WiFi、SLE、BLE 多模并发，支持单天线通道 • Hi3863E：支持雷达人体活动检测，合封 4MB Flash，支持 WiFi、SLE、BLE 多模并发，支持双天线通道</p><p>见：《<a href="https://www.hisilicon.com/cn/products/connectivity/short-range-IoT/wifi-nearlink-ble/Hi3863V100" target="_blank" rel="noreferrer">Hi3863V100 芯片 | 海思官网 (hisilicon.com)</a>》。</p><h1 id="安装-ws63-sdk" tabindex="-1">安装 WS63 SDK <a class="header-anchor" href="#安装-ws63-sdk" aria-label="Permalink to &quot;安装 WS63 SDK&quot;">​</a></h1><h2 id="获取源码" tabindex="-1">获取源码 <a class="header-anchor" href="#获取源码" aria-label="Permalink to &quot;获取源码&quot;">​</a></h2><p>如果您有 <code>WS63_1.10.T7.xxxxxxxx.tar.gz</code> 压缩包，您可以按照以下步骤安装 WS63 SDK。</p><ul><li><p>通过压缩包安装。</p><p>复制压缩包到 <code>xfusion/sdks</code>​ 文件夹内，并解压即可。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 此处省略复制 \`WS63_1.10.T7.xxxxxxxx.tar.gz\` 步骤</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/development/xfusion/sdks</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvzf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WS63_1.10.T7.xxxxxxxx.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果解压出来的文件夹不叫 \`ws63_1.10.t7\` 请手动重命名它</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 见 plugins/ws63/build.py 的 \`SDK_PATH: Path = api.XF_ROOT / &quot;sdks/ws63_1.10.t7&quot;\` 一句</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mv WS63_1.10.T7 ws63_1.10.t7</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>通过 git 安装。</p><blockquote><p>由于写该文档时还没有公开的 git 仓库链接，下文用 <a href="http://xxx/xfusion/ws63_1.10.t7.git" target="_blank" rel="noreferrer">http://xxx/xfusion/ws63_1.10.t7.git</a> 替代。</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/development/xfusion/sdks</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://xxx/xfusion/ws63_1.10.t7.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h2 id="安装-ws63-sdk-环境依赖" tabindex="-1">安装 WS63 SDK 环境依赖 <a class="header-anchor" href="#安装-ws63-sdk-环境依赖" aria-label="Permalink to &quot;安装 WS63 SDK 环境依赖&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 搭建Linux开发环境</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux 系统推荐使用Ubuntu 20.04 及以上版本，Shell 使用bash ，SDK使用Cmake编译（3.14.1 以上），编译工具还包括Python（3.8.0 以上）等。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置 Shell</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置默认使用 bash。打开Linux终端，执行命令“sudo dpkg-reconfigure dash”， 选择 no。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg-reconfigure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 Cmake</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 Python 环境，推荐python3.8.0以上版本。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -V</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 如果Python版本太低，请升级python版本</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sudo apt-get update</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sudo apt-get install python3 -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 安装Python包管理工具</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-setuptools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 安装Kconfiglib 14.1.0+</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kconfiglib</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或 \`sudo -E -H pip3 install kconfiglib\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 其中 -H 标志使 sudo 假定 root 的主目录为 HOME 而不是当前用户的主目录。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## -E 表示使用代理</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 安装pycparser</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pycparser==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.21</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="可以忽略-原生-sdk-编译测试" tabindex="-1">(可以忽略)原生 SDK 编译测试 <a class="header-anchor" href="#可以忽略-原生-sdk-编译测试" aria-label="Permalink to &quot;(可以忽略)原生 SDK 编译测试&quot;">​</a></h2><p>此时解压出来的 ws63 sdk 无法直接编译，需要手动关闭 xfusion 对接部分才能编译。</p><ol><li><p>关闭 xfusion 对接。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打开 menuconfig 菜单</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws63-liteos-app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> menuconfig</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>关闭 <code>(Top) -&gt; Application -&gt; Enable porting XF.</code>​。如下图所示，之后按 <code>s</code>​ 后回车保存，并按 <code>q</code>​ 退出。</p><p>​<img src="`+p+'" alt="image">​</p></li><li><p>编译。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nhso</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws63-liteos-app</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>出现下图内容即为编译成功。</p><p>​<img src="'+l+'" alt="image">​</p></li><li><p>重新打开 xfusion 对接。</p><p>根据上述步骤重新打开即可。</p></li></ol><h1 id="基于-ws63-sdk-使用-xfusion" tabindex="-1">基于 WS63 SDK 使用 xfusion <a class="header-anchor" href="#基于-ws63-sdk-使用-xfusion" aria-label="Permalink to &quot;基于 WS63 SDK 使用 xfusion&quot;">​</a></h1><ol><li><p>vscode 远程连接到虚拟机，并且打开 xfusion 文件夹。</p></li><li><p>导出 xfusion 环境变量。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/development/xfusion</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># `.` 表示用 source 的方式运行 export.sh 脚本</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># `ws63` 表示使用 ws63 目标平台或者芯片</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./export.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ws63</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>此时会安装虚拟环境和导出一些环境变量到当前终端中。</p><p>​<img src="'+e+`" alt="image">​</p><p>此时可以使用 xf 命令，通过 xf 命令可以快速地调用目标平台的编译命令等功能。</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ xf</span></span>
<span class="line"><span>Usage: xf [OPTIONS] COMMAND [ARGS]...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Options:</span></span>
<span class="line"><span>  -v, --verbose  Enable verbose mode.</span></span>
<span class="line"><span>  -r, --rich     Enable rich mode.</span></span>
<span class="line"><span>  -t, --test     Enable test mode.</span></span>
<span class="line"><span>  --help         Show this message and exit.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Commands:</span></span>
<span class="line"><span>  build       编译工程</span></span>
<span class="line"><span>  clean       清空编译中间产物</span></span>
<span class="line"><span>  create      初始化创建一个新工程</span></span>
<span class="line"><span>  export      导出对应sdk的工程（需要port对接）</span></span>
<span class="line"><span>  flash       烧录工程（需要port对接）</span></span>
<span class="line"><span>  install     安装指定的包</span></span>
<span class="line"><span>  menuconfig  全局宏的配置</span></span>
<span class="line"><span>  search      模糊搜索包名</span></span>
<span class="line"><span>  uninstall   卸载指定的包</span></span>
<span class="line"><span>  update      更新对应sdk的工程（需要port对接）</span></span>
<span class="line"><span>  version     查询当前版本</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li><li><p>移动到 <code>log</code>​ ​ 例程内。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/system/log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>清除、配置、编译。</p><ol><li><p>清除：</p><ol><li>命令：<code>xf clean</code>​。</li><li>效果：会清除当前例程内的 build 文件夹。</li></ol></li><li><p>设置 xfusion 菜单：</p><ol><li><p>命令：<code>xf menuconfig</code>​。</p></li><li><p>效果：</p><ol><li>​<img src="`+t+'" alt="image">​</li><li>修改完毕后通过 <code>s</code>​ 按键保存配置。</li></ol></li></ol></li><li><p>编译：</p><ol><li><p>命令：<code>xf build</code>​。</p></li><li><p>效果：</p><p>编译成功后可以看到此提示信息：</p><ol><li>​<img src="'+r+'" alt="image">​</li></ol></li></ol></li></ol></li><li><p>烧录。</p><ol><li><p>编译完毕后，固件包会输出到 <code>sdks/ws63_1.10.t7/output/ws63/fwpkg/ws63-liteos-app/ws63-liteos-app_all.fwpkg</code>​。</p></li><li><p>将文件 <code>ws63-liteos-app_all.fwpkg</code>​ 复制到虚拟机到 Windows 共享文件夹或者其他 Windows 文件夹内。</p></li><li><p>打开 burntool。</p><ol><li><p>设置串口波特率。</p><p>​<img src="'+h+'" alt="image">​</p></li><li><p>配置烧录选项。</p><p>​<img src="'+c+'" alt="image">​</p></li><li><p>前三步完成后的效果如下图所示。</p><p>​<img src="'+d+'" alt="image">​</p></li><li><p>按下开发板上的 RST 按键开始烧录。</p><p>​<img src="'+k+'" alt="image">​</p></li><li><p>烧录完成信息如图所示。</p><p>​<img src="'+o+'" alt="image">​</p></li></ol></li></ol></li><li><p>观察运行现象。</p><ol><li><p>将 ws63 连接到 Windows 并打开串口终端。</p></li><li><p>按下 RST 重置 ws63。</p></li><li><p>运行现象如下图所示。</p><p>​<img src="'+b+'" alt="image">​</p><p>图中 <code>float: f</code>​ 的原因是 xf_printf 关闭了浮点数支持，开启浮点数支持大概要增加 2.5KB 的 flash 占用空间。</p></li></ol></li></ol>',24),m=[g];function F(y,C,x,_,v,f){return n(),a("div",null,m)}const E=s(u,[["render",F]]);export{w as __pageData,E as default};
