import{_ as s,c as n,o as a,a2 as e}from"./chunks/framework.BZKnb7tL.js";const u=JSON.parse('{"title":"文档指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/contribute/documentation_guide.md","filePath":"zh_CN/contribute/documentation_guide.md"}'),i={name:"zh_CN/contribute/documentation_guide.md"},l=e(`<h1 id="文档指南" tabindex="-1">文档指南 <a class="header-anchor" href="#文档指南" aria-label="Permalink to &quot;文档指南&quot;">​</a></h1><p>文档是用于帮助其他人了解你的代码、功能或者构思等信息的载体。</p><p>本文说明编写 xfusion 文档需要遵守的格式、内容等规则。</p><hr><p><strong>适用范围：</strong></p><ul><li><em>外部库以外</em>的所有文档，目前 xfusion 文档以 markdown 格式为主。</li></ul><p><strong>阅读对象：</strong></p><ul><li>所有贡献者。</li></ul><hr><p>本文假定读者已经对 markdown 语法有充分的了解，如对参考 markdown 语法，请参考<a href="#参考文献">参考文献</a>中的<code>[2-3]</code>。</p><h1 id="文档格式" tabindex="-1">文档格式 <a class="header-anchor" href="#文档格式" aria-label="Permalink to &quot;文档格式&quot;">​</a></h1><p>xfusion 文档目前只提供中文和英文两种语言，为了管理不同语言文档中的图片，<strong>请将文档中使用到的图片统一放到<code>doc/public/image</code>路径下</strong>。</p><p>编写文档时，请遵循以下<strong>文档规则：</strong></p><ol><li><p><strong>一个段落写在同一行内。</strong></p><p><strong>错误</strong>示例如下。这个示例中将一段或者一句话分成了很多行。</p><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">我是一段很长的段落。在这个段落中，我将反复强调一个观点，那就是我是一段很长很长的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">段落。这个段落的目的是为了达到一定的字数，通过不断地重复“我是一段很长的段落”来实</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">现。这种写作方式可能单调，但它有效地传达了信息，即我是一段很长的段落。总之，这个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">段落的核心就是它的长度和重复性。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">尽管现在的长度已经缩减，但核心思想仍然不变。这种重复的写作手法，虽然可能显得有些</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">单调，却能够清晰地传达出一个信息：我是一段很长的段落。这就是这个段落存在的意义，</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">它通过简洁的语言和重复的结构，向读者展示了其核心内容。总结来说，这个段落的主旨依</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">然是它的冗长和重复，这是其独特的表达方式。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>正确</strong>的示例如下。 markdown 在查看时通常会打开自动换行，不需要手动换行。 一段话一行有助于在翻译软件中快速翻译，而不需要手动删除换行。</p><div class="language-markdown vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">我是一段很长的段落。在这个段落中，我将反复强调一个观点，那就是我是一段很长很长的段落。这个段落的目的是为了达到一定的字数，通过不断地重复“我是一段很长的段落”来实现。这种写作方式可能单调，但它有效地传达了信息，即我是一段很长的段落。总之，这个段落的核心就是它的长度和重复性。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">尽管现在的长度已经缩减，但核心思想仍然不变。这种重复的写作手法，虽然可能显得有些单调，却能够清晰地传达出一个信息：我是一段很长的段落。这就是这个段落存在的意义，它通过简洁的语言和重复的结构，向读者展示了其核心内容。总结来说，这个段落的主旨依然是它的冗长和重复，这是其独特的表达方式。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><strong>对齐中英文文档的行号。</strong></p><p>这样做能帮助译者节省翻译的时间，而且通过比较行数也能在一定情况下反应某个语言的文档的领先和落后情况。</p></li><li><p><strong>使用自动格式化</strong>，并注意一些格式细节。</p><p>推荐使用 vscode 插件<code>esbenp.prettier-vscode</code>来完成格式化与 markdown 预览等功能。通过该插件可以使用<code>alt + shift + f</code>快捷键来快速格式化 markdown 文档而不用鼠标右键格式化或者手动格式化。</p><ol><li><p><strong>在中英文、数字间适当插入空格。</strong></p><p>尽管很多渲染器在预览时可以自动插入空格，但还是有很多不支持。插入空格的 markdown 文档在阅读源码时更加美观。 例如：<code>你说的对，但是《STM32》是由意法半导体 (ST) 推出的一系列 32 位的单片机。</code>。</p></li><li><p><strong>使用<code>*</code>而不是<code>_</code>。</strong></p><p>例如需要加粗的部分使用<code>**粗体**</code>、而不是<code>__粗体__</code>。 因为<code>_</code>可能无法被正确识别，而且在输入中文时输入<code>_</code>需要频繁切换中英文输入。</p></li><li><p>代码块中<strong>标注正确的语言种类</strong>，以提供语法高亮。</p></li><li><p>建议在说明复杂的逻辑时使用<code>mermaid</code>、<code>wavedrom</code>绘制图表、时序图辅助说明。</p></li><li><p>不建议在 markdown 文档内使用注释，如<code>&lt;!-- --&gt;</code>。</p></li></ol></li><li><p>文件格式：</p><ol><li>使用 3 或者 4 个空格替代<code>TAB</code>，并且<strong>不要</strong>使用制表符缩进代码；</li><li>行尾<strong>不要</strong>尾随空格；</li><li>文件编码格式为 <strong>UTF-8</strong> 格式；</li><li>使用 Unix 风格的 <strong>LF</strong> 行结束符。</li><li>markdown 源码也需要保证一定的美观。 TODO: markdown 源码格式具体规定。</li></ol></li></ol><h1 id="文档内容" tabindex="-1">文档内容 <a class="header-anchor" href="#文档内容" aria-label="Permalink to &quot;文档内容&quot;">​</a></h1><p>本节介绍文档中应当有什么内容。 目前主要说明 example 的介绍文档以及组件的说明文档应当有哪些内容。</p><h2 id="example-的介绍文档" tabindex="-1">example 的介绍文档 <a class="header-anchor" href="#example-的介绍文档" aria-label="Permalink to &quot;example 的介绍文档&quot;">​</a></h2><p>TODO: example 的介绍文档模板。</p><p>example 的介绍文档需要包含以下内容：</p><ol><li><p><strong>支持情况。</strong></p><p>该示例<strong>支持的芯片或平台</strong>的概况。如：<code>stm32103c8</code>, <code>esp32</code>。</p></li><li><p><strong>示例简述。</strong></p><p>这个示例<strong>是什么</strong>？提供了什么<strong>功能</strong>或者有什么<strong>作用</strong>？</p></li><li><p><strong>如何使用。</strong></p><ol><li><p><strong>所需的软件和硬件。</strong></p><ol><li>软件如平台支持包。示例需要的<strong>必要组件，如无特殊情况，必须集成到示例中</strong>，而不需要再次克隆子模块等。</li><li>硬件包含芯片平台、所需要的片外外设，外设和芯片需要如何连接。</li></ol></li><li><p>示例提供了什么<strong>配置</strong>？用户需要修改什么示例配置才能正常运行？</p></li><li><p>构建和烧录有什么步骤与特殊要点？</p></li></ol></li><li><p><strong>运行现象。</strong></p><p>运行该示例有什么<strong>输出和现象</strong>？</p><ol><li>描述运行现象。</li><li>放出运行日志。</li></ol></li><li><p><strong>常见问题。</strong></p><p>示例有什么常见问题？需要如何解决？</p></li><li><p><strong>示例平台差异。</strong></p><p>该示例在不同平台上运行会有什么不同表现？ 如果没有差异，该部分可以省略。如果有差异，需要怎么做才能屏蔽区别？如果无法屏蔽，请强调差异。</p></li><li><p><strong>示例详解。</strong>（可以省略）</p><p>主要介绍示例中的重点难点代码。</p></li><li><p><strong>测试环境。</strong></p><p>需要列出以下信息确保其他人能够复现示例。</p><ol><li>芯片型号；</li><li>芯片开发环境的 SDK 版本号；</li><li>工具链名称及版本号；</li><li>平台支持包版本号（如实现<code>xf_hal</code>的下层硬件驱动）。</li></ol></li></ol><h2 id="组件的介绍文档" tabindex="-1">组件的介绍文档 <a class="header-anchor" href="#组件的介绍文档" aria-label="Permalink to &quot;组件的介绍文档&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Note</p><p>组件的介绍文档模板。</p></div><h1 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h1><ol><li><a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/contribute/documenting-code.html" target="_blank" rel="noreferrer">编写文档 - ESP32 - — ESP-IDF 编程指南 latest 文档 (espressif.com)</a></li><li><a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noreferrer">Markdown 教程 | 菜鸟教程 (runoob.com)</a></li><li><a href="https://markdown.com.cn/intro.html" target="_blank" rel="noreferrer">Markdown 入门基础 | Markdown 官方教程</a></li></ol>`,24),o=[l];function r(t,p,d,c,h,g){return a(),n("div",null,o)}const k=s(i,[["render",r]]);export{u as __pageData,k as default};
